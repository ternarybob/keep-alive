name: Build Cross-Platform Packages

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get dependencies
      run: go mod download

    - name: Get version from .version file
      id: version
      run: |
        VERSION=$(grep '^version:' .version | awk '{print $2}')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"

    - name: Build for macOS AMD64
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        BUILD_TIME=$(date '+%Y-%m-%d %H:%M:%S')
        go build -o bin/keep-alive-darwin-amd64 \
          -ldflags "-X 'main.Version=$VERSION' -X 'main.BuildTime=$BUILD_TIME' -X 'main.Environment=prod' -s -w" \
          -trimpath .
      env:
        CGO_ENABLED: 0
        GOOS: darwin
        GOARCH: amd64

    - name: Build for macOS ARM64
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        BUILD_TIME=$(date '+%Y-%m-%d %H:%M:%S')
        go build -o bin/keep-alive-darwin-arm64 \
          -ldflags "-X 'main.Version=$VERSION' -X 'main.BuildTime=$BUILD_TIME' -X 'main.Environment=prod' -s -w" \
          -trimpath .
      env:
        CGO_ENABLED: 0
        GOOS: darwin
        GOARCH: arm64

    - name: Create bin directory
      run: mkdir -p bin

    - name: Create universal macOS binary
      run: |
        lipo -create -output bin/keep-alive-darwin-universal bin/keep-alive-darwin-amd64 bin/keep-alive-darwin-arm64
        chmod +x bin/keep-alive-darwin-universal

    - name: Upload macOS AMD64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: keep-alive-darwin-amd64
        path: bin/keep-alive-darwin-amd64

    - name: Upload macOS ARM64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: keep-alive-darwin-arm64
        path: bin/keep-alive-darwin-arm64

    - name: Upload macOS Universal Binary
      uses: actions/upload-artifact@v3
      with:
        name: keep-alive-darwin-universal
        path: bin/keep-alive-darwin-universal

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get dependencies
      run: go mod download

    - name: Get version from .version file
      id: version
      run: |
        $version = (Get-Content .version | Where-Object { $_ -match '^version:' } | ForEach-Object { ($_ -split ':')[1].Trim() })
        echo "version=$version" >> $env:GITHUB_OUTPUT
        Write-Host "Using version: $version"

    - name: Build for Windows AMD64
      run: |
        .\scripts\build.ps1 -Arch amd64 -Release -Environment prod -Version ${{ steps.version.outputs.version }}

    - name: Build for Windows ARM64
      run: |
        .\scripts\build.ps1 -Arch arm64 -Release -Environment prod -Version ${{ steps.version.outputs.version }}

    - name: Upload Windows AMD64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: keep-alive-windows-amd64
        path: bin/keep-alive.exe

    - name: Upload Windows ARM64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: keep-alive-windows-arm64
        path: bin/keep-alive-windows-arm64.exe

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          keep-alive-darwin-amd64/keep-alive-darwin-amd64
          keep-alive-darwin-arm64/keep-alive-darwin-arm64
          keep-alive-darwin-universal/keep-alive-darwin-universal
          keep-alive-windows-amd64/keep-alive.exe
          keep-alive-windows-arm64/keep-alive-windows-arm64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}